:PROPERTIES:
:ID:       85b20216-7707-4c47-96e9-2eccc110a0c0
:ROAM_ALIASES: routineParser
:END:
#+title: Routine Parser

* Help
#+begin_src bash :exports result :results pp
routineParser help
#+end_src

#+RESULTS:
#+begin_example
This is a multiple-dispatch command.  -h/--help/--help-syntax is available
for top-level/all subcommands.  Usage is like:
    routineParser {SUBCMD} [subcommand-opts & args]
where subcommand syntaxes are as follows:

  summary [REQUIRED,optional-params]
    Checks if routine is not larger than day
  Options:
      -r=, --routineYaml=  string  REQUIRED  set routineYaml
      -t=, --today=        string  ""        set today

  represent [REQUIRED,optional-params]
    Generates the routine representation in Markdown

    The float hours described at `dayStart` overrides the configuration day
    start
  Options:
      -r=, --routineYaml=  string  REQUIRED  set routineYaml
      -d=, --dayStart=     float   -1.0      set dayStart
      -t=, --today=        string  ""        set today

  patchTimetomeRepeatingTasks [REQUIRED,optional-params]
    Patches the timeto.me export file with the routine tasks
  Options:
      -r=, --routineYaml=   string  REQUIRED  set routineYaml
      -t=, --timetomeJson=  string  REQUIRED  set timetomeJson
      -d=, --dayStart=      float   -1.0      set dayStart
      --today=              string  ""        set today
#+end_example


* Example
#+begin_src bash :exports result :results pp
routineParser represent -r example.yaml
#+end_src

#+RESULTS:
#+begin_example
## Wake up (08:00-08:22)
### Exit bedroom (08:00-08:17)
- Vest clothes (08:00-08:05)
- Make the bed (08:07-08:12)
- Drink water (08:14-08:15)

## Waking the body (08:30-12:49)
### Breakfast (08:30-12:44)
- Prepare the breakfast (08:30-11:00)
- Eat the breakfast (11:02-12:42)

## Morning work (12:57-21:04)
### Work (12:57-20:59)
- Work (12:57-20:57)
#+end_example
